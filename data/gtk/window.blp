using Gtk 4.0;
using Adw 1;

template $LexiWindow : Adw.ApplicationWindow {
  title: "Lexi";
  width-request: 360;
  height-request: 100;

  Adw.Breakpoint {
    condition ("max-width: 690")

    setters {
      overlay_split_view.collapsed: true;
    }
  }

  Adw.Breakpoint {
    condition ("max-width: 483")

    setters {
      overlay_split_view.collapsed: true;
      lexicon_split_view.collapsed: true;
      lexicon_list_box.selection-mode: none;
    }
  }

  Adw.ToastOverlay toast_overlay {
    Adw.NavigationView navigation_view {
      Adw.NavigationPage {
        Adw.OverlaySplitView overlay_split_view {
          collapsed: false;
          show-sidebar: true;

          [sidebar]
          Adw.NavigationPage sidebar_nav_page {
            title: _("Lexicons");

            Adw.ToolbarView {
              [top]
              Adw.HeaderBar {
                [start]
                Box {
                  orientation: horizontal;

                  Button toggle_sidebar_button {
                    icon-name: "lexi-toggle-sidebar-symbolic";
                    tooltip-text: _("Toggle sidebar");
                    clicked => $on_toggle_sidebar_action();
                  }
                  ToggleButton toggle_lexicons_search_button {
                    icon-name: "lexi-toggle-search-symbolic";
                    tooltip-text: _("Find Lexicon");
                  }
                }

                [end]
                Box {
                  orientation: horizontal;

                  Button {
                    icon-name: "lexi-add-symbolic";
                    tooltip-text: _("Add Lexicon");
                    clicked => $on_add_lexicon_button_clicked();
                  }
                  MenuButton {
                    icon-name: "lexi-app-menu-symbolic";
                    tooltip-text: _("App menu");
                    menu-model: app_menu;
                    primary: true;
                  }
                }
              }
              [top]
              SearchBar search_bar {
                search-mode-enabled: bind toggle_lexicons_search_button.active bidirectional;
                key-capture-widget: navigation_view;

                Adw.Clamp {
                  SearchEntry search_entry {
                    placeholder-text: _("Search…");
                    hexpand: true;
                    changed => $on_lexicon_search_entry_changed();

                    ShortcutController {
                      Shortcut {
                        trigger: "Escape";
                        action: "action(win.toggle_search)";
                      }
                    }
                  }
                }
              }

              ScrolledWindow lexicons_scrolled_window {
                ListBox lexicons_list_box {
                  selection-mode: single;
                  row-selected => $on_lexicon_selected();

                  styles ["navigation-sidebar"]
                }
              }
            }
          }

          Adw.NavigationSplitView lexicon_split_view {
            sidebar-width-fraction: 0.5;
            max-sidebar-width: 999999;

            [sidebar]
            Adw.NavigationPage lexicon_nav_page {
              title: "Lexi";

              Adw.ToolbarView {
                [top]
                Adw.HeaderBar {
                  [start]
                  Button {
                    icon-name: bind toggle_sidebar_button.icon-name;
                    tooltip-text: bind toggle_sidebar_button.tooltip-text;
                    visible: bind overlay_split_view.show-sidebar inverted;
                    clicked => $on_toggle_sidebar_action();
                  }

                  [end]
                  MenuButton {
                    icon-name: "lexi-sort-symbolic";
                    tooltip-text: _("Sort by…");
                    menu-model: sort;
                  }

                  [end]
                  Button {
                    icon-name: "lexi-filter-words-symbolic";
                    tooltip-text: _("Filter words by types");
                    clicked => $open_filer_dialog();
                  }
                }

                ScrolledWindow lexicon_scrolled_window {
                  hexpand: true;
                  vexpand: true;

                  ListBox lexicon_list_box {
                    styles ["navigation-sidebar"]
                  }
                }

                [bottom]
                Revealer words_bottom_bar_revealer {
                  transition-type: slide_up;
                  transition-duration: 200;

                  Box {
                    vexpand: false;
                    hexpand: true;
                    spacing: 2;
                    margin-bottom: 4;
                    margin-end: 4;
                    margin-start: 4;
                    orientation: horizontal;

                    ToggleButton selection_mode_toggle_button {
                      icon-name: "lexi-toggle-selection-symbolic";
                      tooltip-text: _("Select words");
                      toggled => $selection_mode_button_toggled();

                      styles ["flat"]
                    }

                    Revealer delete_selected_words_button_revealer {
                      transition-type: slide_right;
                      transition-duration: 200;

                      Button delete_selected_words_button {
                        icon-name: "lexi-delete-symbolic";
                        tooltip-text: _("Delete selected words");
                        clicked => $on_delete_selected_words_action();

                        styles ["destructive-action"]
                      }
                    }

                    Entry lexicon_search_entry {
                      margin-top: 4;
                      hexpand: true;
                      placeholder-text: _("Find a word");
                      changed => $on_search_entry_changed();
                      secondary-icon-name: "lexi-help-about-symbolic";
                      secondary-icon-tooltip-text: _("Query syntax:\nWord-based: Just word or its tranlsation\nE.g. “Mom“, “Dad“\n\nTag-based: Query starts with “#”, contains tag name FULLY and doesn't contain word-based query\nE.g. “#basic#family”, “#basic #suffixes”\nBUT NOT: “#family mom” or “#famil”");
                    }

                    Button {
                      icon-name: "lexi-add-symbolic";
                      tooltip-text: _("Add word");
                      clicked => $on_add_word_action();
                      
                      styles ["flat"]
                    }
                  }
                }
              }
            }

            [content]
            Adw.NavigationPage word_nav_page {
              title: _("Word");

              Adw.ToolbarView {
                [top]
                Adw.HeaderBar {
                  [start]
                  Button save_word_button {
                    label: _("Save");
                    clicked => $on_save_word_button_clicked();

                    styles ["suggested-action"]
                  }
                }

                Adw.Clamp {
                  ScrolledWindow {
                    vexpand: false;

                    Adw.PreferencesGroup {
                      vexpand: false;
                      margin-start: 4;
                      margin-end: 4;
                      margin-top: 4;
                      margin-bottom: 4;

                      Adw.EntryRow word_entry_row {
                        title: _("Word");
                        use-markup: false;
                        changed => $on_word_entry_changed();
                      }

                      Adw.EntryRow pronunciation_entry_row {
                        title: _("Pronunciation");
                        use-markup: false;
                        changed => $on_pronunciation_entry_changed();
                      }

                      Adw.ExpanderRow translations_expander_row {
                        title: _("Translations");

                        [suffix]
                        Box {
                          valign: center;

                          Button {
                            icon-name: "lexi-add-symbolic";
                            tooltip-text: _("Add translation");
                            clicked => $on_word_list_prop_button_pressed();

                            styles ["flat"]
                          }
                        }
                      }

                      Adw.ExpanderRow word_type_expander_row {
                        title: _("Word Type");
                        subtitle-lines: 1;

                        [suffix]
                        Box {
                          valign: center;

                          Button {
                            icon-name: "lexi-add-symbolic";
                            tooltip-text: _("Assign word type");
                            clicked => $on_assign_word_type_clicked();

                            styles ["flat"]
                          }
                        }
                      }

                      Adw.ExpanderRow examples_expander_row {
                        title: _("Examples");

                        [suffix]
                        Box {
                          valign: center;

                          Button {
                            icon-name: "lexi-add-symbolic";
                            tooltip-text: _("Add example");
                            clicked => $on_word_list_prop_button_pressed();

                            styles ["flat"]
                          }
                        }
                      }

                      Adw.ExpanderRow references_expander_row {
                        title: _("References");

                        [suffix]
                        Box {
                          valign: center;

                          Button {
                            icon-name: "lexi-add-symbolic";
                            tooltip-text: _("Add example");
                            clicked => $on_references_add_button_pressed();

                            styles ["flat"]
                          }
                        }
                      }
                    }
                  }
                }

                // [bottom]
                // Adw.BottomSheet ipa_bottom_sheet {
                //   modal: false;
                //   sheet: Adw.ToolbarView {
                //     [top]
                //     Adw.HeaderBar {
                //       decoration-layout: ":close";
                //     }

                //     ScrolledWindow {
                //       propagate-natural-height: true;
                //       propagate-natural-width: true;

                //       FlowBox ipa_charset_flow_box {
                //         homogeneous: true;
                //         valign: start;
                //         max-children-per-line: 1000;
                //         halign: center;
                //         row-spacing: 6;
                //         column-spacing: 4;
                //         margin-bottom: 8;
                //         margin-end: 8;
                //         margin-start: 8;
                //         margin-top: 8;
                //       }
                //     }
                //   };
                //   bottom-bar: Adw.Bin {
                //     height-request: 40;

                //     Label {
                //       label: _("IPA Characters");
                //     }
                //   };
                // }
              }
            }
          }
        }
      }
    }
  }
}

Adw.Dialog references_dialog {
  title: _("Refer a Word");
  content-height: 600;
  content-width: 450;

  Adw.Clamp {
    orientation: horizontal;
    maximum-size: 450;
    tightening-threshold: 450;

    Adw.Clamp {
      orientation: vertical;
      maximum-size: 600;
      tightening-threshold: 600;

      Adw.ToolbarView {
        [top]
        Adw.HeaderBar {}

        ScrolledWindow {
          ListBox references_dialog_list_box {
            selection-mode: none;

            styles ["navigation-sidebar"]
          }
        }
      }
    }
  }
}

Adw.Dialog assign_word_type_dialog {
  title: _("Assign Word Type");
  content-height: 600;
  content-width: 450;

  Adw.Clamp {
    orientation: horizontal;
    maximum-size: 450;
    tightening-threshold: 450;

    Adw.Clamp {
      orientation: vertical;
      maximum-size: 600;
      tightening-threshold: 600;

      Adw.ToolbarView {
        [top]
        Adw.HeaderBar {}

        ScrolledWindow {
          ListBox assign_word_type_dialog_list_box {
            selection-mode: none;

            styles ["navigation-sidebar"]
          }
        }
      }
    }
  }
}

Adw.Dialog filter_dialog {
  title: _("Filter by Word Type");
  content-height: 600;
  content-width: 450;

  Adw.Clamp {
    orientation: horizontal;
    maximum-size: 450;
    tightening-threshold: 450;

    Adw.Clamp {
      orientation: vertical;
      maximum-size: 600;
      tightening-threshold: 600;

      Adw.ToolbarView {
        [top]
        Adw.HeaderBar {}

        Box {
          orientation: vertical;
          margin-bottom: 12;
          margin-end: 12;
          margin-start: 12;
          margin-top: 12;
          spacing: 12;

          ScrolledWindow {
            propagate-natural-height: true;
            ListBox filter_dialog_list_box {
              selection-mode: none;

              styles ["navigation-sidebar"]
            }
          }

          Box {
            halign: center;
            valign: center;
            Button {
              label: _("Reset All");
              clicked => $reset_filters();

              styles ["pill", "destructive-action"]
            }
          }
        }
      }
    }
  }
}

Adw.StatusPage no_lexicons_yet {
  title: _("No Lexicons found yet");
  icon-name: "lexi-add-symbolic";

  styles ["compact"]
}

Adw.StatusPage no_lexicons_found {
  title: _("No Lexicons found");
  description: _("No Lexicons found for this search request");
  icon-name: "lexi-no-found-symbolic";

  styles ["compact"]
}

Adw.StatusPage no_words_yet {
  title: _("No Words found yet");
  icon-name: "lexi-add-symbolic";

  Box {
    halign: center;

    Button {
      label: _("Add Word");
      clicked => $on_add_word_action();

      styles ["pill"]
    }
  }

  styles ["compact"]
}

Adw.StatusPage no_words_found {
  title: _("No Words found");
  description: _("No Words found for this search request");
  icon-name: "lexi-no-found-symbolic";
}

Adw.StatusPage lexicon_not_selected {
  title: _("No Lexicon selected");
  description: _("Please select a Lexicon to view its words");
  icon-name: "lexi-lexicon-symbolic";
}

Adw.AlertDialog add_lexicon_alert_dialog {
  default-response: "add";
  heading: _("Add new Lexicon");
  close-response: "cancel";
  extra-child: Gtk.Entry add_lexicon_entry {
    placeholder-text: _("Name");
    changed => $on_add_lexicon_entry_changed();
  };
  response => $on_add_lexicon();

  responses [
    cancel: _("Cancel"),
    add: _("Add") suggested
  ]
}

ShortcutsWindow help_overlay {
  modal: true;

  ShortcutsSection {
    section-name: "Shortcuts";
    max-height: 10;

    ShortcutsGroup {
      title: _("General");

      ShortcutsShortcut {
        title: _("Quit");
        action-name: "app.quit";
      }

      ShortcutsShortcut {
        title: _("Search words");
        action-name: "win.search";
      }

      ShortcutsShortcut {
        title: _("Show filter dialog");
        action-name: "win.filter_button_clicked";
      }

      ShortcutsShortcut {
        title: _("Show preferences");
        action-name: "win.show_preferences";
      }

      ShortcutsShortcut {
        title: _("Keybindings");
        action-name: "win.show-help-overlay";
      }

      ShortcutsShortcut {
        title: _("Toggle sidebar");
        action-name: "win.toggle_sidebar";
      }
    }

    ShortcutsGroup {
      title: _("Editing");

      ShortcutsShortcut {
        title: _("Add new word");
        action-name: "win.add_word";
      }
    }
  }
}

menu app_menu {
  section {
    item (_("Preferences"), "win.show_preferences")
    item (_("Keybindings"), "win.show-help-overlay")
    item (_("About"), "app.about")
  }
}

menu sort {
  section {
    item {
      label: _("Ascending");
      action: "win.sort_method";
      target: "up";
    }

    item {
      label: _("Descending");
      action: "win.sort_method";
      target: "down";
    }
  }

  section {
    item {
      label: _("Word");
      action: "win.sort_type";
      target: "word";
    }

    item {
      label: _("First Translation");
      action: "win.sort_type";
      target: "first_trnslt";
    }

    item {
      label: _("References");
      action: "win.sort_type";
      target: "by_ref";
    }
  }
}